import{default as React,Component}from "./react.js";let createFactory=React.createFactory;const hasOwnProperty=Object.prototype.hasOwnProperty;export function is(e, t){return e===t?0!==e||0!==t||1/e==1/t:e!==e&&t!==t};export function shallowEqual(e, t){if(is(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;const r=Object.keys(e),o=Object.keys(t);if(r.length!==o.length)return!1;for(let o=0; o<r.length; o++)if(!hasOwnProperty.call(t,r[o])||!is(e[r[o]],t[r[o]]))return!1;return!0};export const setStatic=(e, t)=> r=>(r[e]=t,r);export const setDisplayName=e=>setStatic("displayName",e);export const getDisplayName=e=>{if("string"==typeof e)return e;if(e)return e.displayName||e.name||"Component"};const wrapDisplayName=(e,t)=>`${t}(${getDisplayName(e)})`;export const shouldUpdate=e=>t=>{const r=createFactory(t);class o extends Component{shouldComponentUpdate(t){return e(this.props,t)}render(){return r(this.props)}}return setDisplayName(wrapDisplayName(t,"shouldUpdate"))(o)};export const pure=e=>{const t=shouldUpdate((e,t)=>!shallowEqual(e,t));return setDisplayName(wrapDisplayName(e,"pure"))(t(e))};export function compose(...e){return 0===e.length?e=>e:1===e.length?e[0]:e.reduce((e,t)=>(...r)=>e(t(...r)))};
